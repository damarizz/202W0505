---
type Props = {
  href?: string,
  back?: boolean,
};

const { back, href } = Astro.props;
const { BASE_URL } = import.meta.env;

if (back === undefined && typeof href !== 'string') {
  throw new Error('The `href` prop is required for the `Link` component when it is not "back".');
}

let url: string = '';

if (back) {
  // this is the url without the last path
  url = `/${Astro.url.pathname.split('/').filter(p => p).slice(0, -1).join('/')}/`;
  if (url === '//') url = '/';
}
else if (href!.startsWith(BASE_URL) || url.startsWith('http')) {
  url = href!;
}
else if (href!.startsWith('/')) {
  const base = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;
  url = `${base}${href}`;
}
else {
  let { pathname } = Astro.url;
  if (!pathname.endsWith('/')) pathname += '/';
  url = `${pathname}${href}`;
}
---

<a href={url} target="_self"><slot /></a>
